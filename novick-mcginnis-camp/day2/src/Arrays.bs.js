// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var Char = require("bs-platform/lib/js/char.js");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var $$String = require("bs-platform/lib/js/string.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var ArrayLabels = require("bs-platform/lib/js/arrayLabels.js");

var myFirstArray = /* array */[
  1,
  2,
  3
];

console.log(myFirstArray);

console.log(Caml_array.caml_array_get(myFirstArray, 0));

var otherArray = Caml_array.caml_make_vect(3, "aa");

console.log(otherArray);

var logicArray = ArrayLabels.init(3, (function (i) {
        return "k" + String(i);
      }));

console.log(logicArray);

console.log(logicArray.length);

console.log($$Array.to_list(logicArray));

console.log($$Array.of_list($$Array.to_list(logicArray)));

function maxOfArray(arr) {
  return ArrayLabels.fold_left(Caml_obj.caml_max, Pervasives.min_int, arr);
}

console.log(maxOfArray(/* array */[
          5,
          6,
          9
        ]));

function filterArray(filter, arr) {
  return $$Array.of_list(List.filter(filter)($$Array.to_list(arr)));
}

console.log(filterArray((function (num) {
            return num > 2;
          }), /* array */[
          1,
          2,
          3
        ]));

var alphabet = $$Array.to_list($$Array.mapi((function (i, param) {
            return Char.chr(i + 65 | 0);
          }), Caml_array.caml_make_vect(26, 0)));

function isPangram(str) {
  var partial_arg = $$String.uppercase(str);
  return List.for_all((function (param) {
                return $$String.contains(partial_arg, param);
              }), alphabet);
}

console.log(isPangram("The quick brown fox jumps over the lazy dog"));

exports.myFirstArray = myFirstArray;
exports.otherArray = otherArray;
exports.logicArray = logicArray;
exports.maxOfArray = maxOfArray;
exports.filterArray = filterArray;
exports.alphabet = alphabet;
exports.isPangram = isPangram;
/*  Not a pure module */
