// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var Caml_obj = require("bs-platform/lib/js/caml_obj.js");

console.log("Hello, BuckleScript and Reason!");

function b(a, b$1) {
  return a + b$1 | 0;
}

console.log("\nFloat arithmetic");

console.log(2.0 + 2.0);

console.log("\nString concatenation");

console.log("Hi String Concat " + String(1));

console.log("\nMultiline strings");

console.log("Multine\nStrings\nAre\nCool");

console.log("\nString interpolation w/ BuckleScript");

var myName = "Kalalau";

console.log("Hi " + (String(myName) + ""));

console.log("\nEquality");

console.log("Structural equality: [1, 2, 3] == [1, 2, 3]");

console.log(Caml_obj.caml_equal(/* :: */[
          1,
          /* :: */[
            2,
            /* :: */[
              3,
              /* [] */0
            ]
          ]
        ], /* :: */[
          1,
          /* :: */[
            2,
            /* :: */[
              3,
              /* [] */0
            ]
          ]
        ]));

console.log("Referential equality: [1, 2, 3] === [1, 2, 3]");

console.log(/* :: */[
      1,
      /* :: */[
        2,
        /* :: */[
          3,
          /* [] */0
        ]
      ]
    ] === /* :: */[
      1,
      /* :: */[
        2,
        /* :: */[
          3,
          /* [] */0
        ]
      ]
    ]);

var whoami = /* record */[
  /* name */"kal",
  /* age */30
];

exports.b = b;
exports.whoami = whoami;
exports.myName = myName;
/*  Not a pure module */
